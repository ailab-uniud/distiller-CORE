/*
 * Copyright (C) 2015 Artificial Intelligence
 * Laboratory @ University of Udine.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package it.uniud.ailab.dcore.annotation.annotations;

import it.uniud.ailab.dcore.annotation.Annotation;

/**
 * A feature is a value generated by an annotator that expresses some
 * property of the annotated object. For example, a sentiment annotator
 * may assign a high value over a gram for positive sentiment, and negative 
 * otherwise.
 * 
 * @author Marco Basaldella
 */
public class FeatureAnnotation 
        extends Annotation
        implements ScoredAnnotation {
    
    /**
     * A feature.
     * 
     * @param annotator the annotator that generated the feature.
     * @param score the value of the feature.
     */
    public FeatureAnnotation(String annotator,double score) {
        super(annotator);
        
        super.addNumber(score);
    }
    
    /**
     * Get the value of the feature.
     * 
     * @return the value of the feature
     */
    @Override
    public double getScore() {
        return super.getNumberAt(0).doubleValue();
    }
}
