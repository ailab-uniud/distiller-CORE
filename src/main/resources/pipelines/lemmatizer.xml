<?xml version="1.0" encoding="UTF-8"?>
<!--      
  	Copyright (C) 2015 Artificial Intelligence
  	Laboratory @ University of Udine.
  
  	This file is part of the Distiller-CORE library.
  
  	Licensed under the Apache License, Version 2.0 (the "License");
  	you may not use this file except in compliance with the License.
  	You may obtain a copy of the License at
 
  	     http://www.apache.org/licenses/LICENSE-2.0
 
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
-->

<!--    Pipeline that generates the intensity score for each word and sentence 
        of a document. Based on M. Jockers' syuzhet package. Uses the morph-it!
        library from the University of Bologna and the Sentix lexicon by
        Valerio Basile and Malvina Nissim. -->


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation ="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd" xmlns:aop="http://www.springframework.org/schema/aop">
    
    <!-- As utility, some locales -->   
    <bean id="italian" class="java.util.Locale">
        <constructor-arg value="it" type="java.lang.String"/>
    </bean>
    
    
    <!-- Language detectors -->  
    <bean id="cybozu" class="it.uniud.ailab.dcore.wrappers.external.CybozuLanguageDetectorAnnotator"/>
    
    <!-- Annotators -->  
    <bean id="openNLP" 
          class="it.uniud.ailab.dcore.wrappers.external.OpenNlpBootstrapperAnnotator">
        <!-- Example of local models path -->
        <!--
        <property name="modelPaths">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="en-sent" value="/opt/drest/models/en-sent.bin"/>
                <entry key="en-token" value="/opt/drest/models/en-token.bin"/>
                <entry key="en-pos-maxent" value="/opt/drest/models/en-pos-maxent.bin"/>
                <entry key="it-sent" value="/opt/drest/models/it/it-sent.bin"/>
                <entry key="it-token" value="/opt/drest/models/it/it-token.bin"/>
                <entry key="it-pos-maxent" value="/opt/drest/models/it/it-pos-maxent.bin"/>
              </map>
        </property>
        -->        
    </bean>
      
    <bean id="morphit" 
          class="it.uniud.ailab.dcore.annotation.annotators.ItalianLemmatizerAnnotator"  />
    
    <bean   id="outputWriter"
            class="it.uniud.ailab.dcore.io.TokenPrinter" >
        <property name="printText" value="false" />
        <property name="printPoS" value="false" />
        <property name="printLemma" value="true" />
    </bean>
    
    
    <bean id="defaultPipeline"
          class="it.uniud.ailab.dcore.Pipeline">
        <property name="stages">
            <list>
                <!-- split the document -->
                <ref bean="openNLP"/>
                <!-- lemmatize the tokens -->
                <ref bean="morphit"/>
                <!-- write output -->
                <ref bean="outputWriter"/>
            </list>
        </property>        
    </bean> 
    
    <!-- The main object, the Distiller, that receives the beans defined above -->
    <bean id="distiller" class="it.uniud.ailab.dcore.Distiller">
        <property name="languageDetector" ref="cybozu"/>
        <property name="pipelines">
            <map key-type="java.util.Locale" 
                 value-type="it.uniud.ailab.dcore.annotation.Pipeline">
                <entry
                    key-ref="italian" 
                    value-ref="defaultPipeline">
                </entry>
            </map>
        </property>
    </bean>
   
</beans>